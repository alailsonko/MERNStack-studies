{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample swagger for Fiber",
        "title": "Fiber Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3030",
    "basePath": "/",
    "paths": {
        "/user": {
            "get": {
                "description": "get all users",
                "produces": [
                    "application/json"
                ],
                "summary": "Get users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/docs.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "create user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create an user",
                "operationId": "create-user-by-string",
                "parameters": [
                    {
                        "description": "accepts user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/docs.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/docs.HTTPOk"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/docs.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "get an user",
                "operationId": "get-user-by-int",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/docs.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "edit user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "edit an user",
                "operationId": "edit-user-by-string",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "accepts user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/docs.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/docs.HTTPOk"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/docs.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "delete an user",
                "operationId": "delete-user-by-string",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/docs.HTTPOk"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/docs.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "docs.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "docs.HTTPOk": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "status successfully"
                }
            }
        },
        "docs.User": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string",
                    "example": "12345678911"
                },
                "email": {
                    "type": "string",
                    "example": "valid@mail.com"
                },
                "phone_number": {
                    "type": "string",
                    "example": "8699999999"
                },
                "username": {
                    "type": "string",
                    "example": "valid username"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}